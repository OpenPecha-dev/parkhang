{"version":3,"file":"71.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail/PechaText.css","webpack://parkhang/./app/components/TextDetail/PechaText.js","webpack://parkhang/./app/images/page_break_icon.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pechaText\":\"PechaText---pechaText\",\"textPagesRow\":\"PechaText---textPagesRow\",\"text\":\"PechaText---text\",\"pechaImage\":\"PechaText---pechaImage\",\"pechaContent\":\"PechaText---pechaContent\"};","import React from \"react\";\r\nimport { AutoSizer } from \"react-virtualized/dist/es/AutoSizer\";\r\nimport { List } from \"react-virtualized/dist/es/List\";\r\nimport {\r\n    CellMeasurer,\r\n    CellMeasurerCache\r\n} from \"react-virtualized/dist/es/CellMeasurer\";\r\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\r\nimport Text from \"./Text\";\r\nimport styles from \"./PechaText.css\";\r\n\r\nconst cache = new CellMeasurerCache({\r\n    fixedWidth: true\r\n});\r\n\r\nconst PechaText = props => {\r\n    const paginatedText = props.paginatedText;\r\n    const pages = paginatedText.getPages();\r\n\r\n    function rowRenderer({ key, index, parent, style }) {\r\n        return (\r\n            <CellMeasurer\r\n                columnIndex={0}\r\n                key={key}\r\n                parent={parent}\r\n                rowIndex={index}\r\n                cache={cache}\r\n            >\r\n                <div key={key} style={style} className={styles.textPagesRow}>\r\n                    <div className={styles.pechaImage}>\r\n                        <div className={styles.pechaContent}>\r\n                            <p>Page {index + 1} image</p>\r\n                        </div>\r\n                    </div>\r\n                    <Text\r\n                        segmentedText={pages[index]}\r\n                        annotations={props.annotations}\r\n                        activeAnnotations={props.activeAnnotations}\r\n                        annotationPositions={props.annotationPositions}\r\n                        selectedAnnotatedSegments={\r\n                            props.selectedAnnotatedSegments\r\n                        }\r\n                    />\r\n                </div>\r\n            </CellMeasurer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.pechaText}>\r\n            {pages.length > 0 ? (\r\n                <AutoSizer>\r\n                    {({ height, width }) => (\r\n                        <List\r\n                            height={height}\r\n                            rowCount={pages.length}\r\n                            rowHeight={cache.rowHeight}\r\n                            rowRenderer={rowRenderer}\r\n                            width={width}\r\n                            deferredMeasurementCache={cache}\r\n                        />\r\n                    )}\r\n                </AutoSizer>\r\n            ) : (\r\n                <ul>\r\n                    <li>(no pages)</li>\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PechaText;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M3 0h24v15H3z\"\n});\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"currentColor\",\n  strokeWidth: 3,\n  d: \"M0 20h8M11 20h8M22 20h8\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M3 25h24v15H3z\"\n});\n\nvar SvgPageBreakIcon = function SvgPageBreakIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 30 40\",\n    fill: \"currentColor\"\n  }, props), _ref, _ref2, _ref3);\n};\n\nexport default SvgPageBreakIcon;"],"mappings":";;;;;;;;;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAkBA;AACA;AACA;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}