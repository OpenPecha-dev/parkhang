{"version":3,"file":"13.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail/AnnotationControlsHeader.css","webpack://parkhang/./app/components/TextDetail/AnnotationControlsHeader.js","webpack://parkhang/./app/images/PencilAltIcon.svg","webpack://parkhang/./app/images/note.svg","webpack://parkhang/./app/images/page_break_icon.svg","webpack://parkhang/./app/images/question_answer.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-tint\":\"#88af8e\",\"blue-tint\":\"#024279\",\"active-button\":\"#00746b\",\"mainTint\":\"#024279\",\"activeButton\":\"#00746b\",\"header\":\"AnnotationControlsHeader---header\",\"Anotation_closeBtn\":\"AnnotationControlsHeader---Anotation_closeBtn\",\"edit\":\"AnnotationControlsHeader---edit\"};","// @flow\r\nimport React from \"react\";\r\nimport Button from \"components/UI/Button\";\r\nimport styles from \"./AnnotationControlsHeader.css\";\r\nimport PageBreakIcon from \"images/page_break_icon.svg\";\r\nimport NoteIcon from \"images/note.svg\";\r\nimport QuestionIcon from \"images/question_answer.svg\";\r\n\r\nimport PencilAltIcon from \"images/PencilAltIcon.svg\";\r\ntype Props = {\r\n    addPageBreak: null | (() => void),\r\n    addLineBreak: null | (() => void),\r\n    addNote: null | (() => void),\r\n    addQuestion: null | (() => void),\r\n    closeAnnotation: null | (() => void),\r\n    editAnnotationHandler: null | (() => void),\r\n    userLoggedIn: Boolean,\r\n};\r\nconst ICON_SIZE = 15;\r\nclass AnnotationControlsHeader extends React.Component<Props> {\r\n    // keyHandler;\r\n    constructor() {\r\n        super();\r\n    }\r\n    // componentDidMount() {\r\n    //     this.keyHandler = (e) => {\r\n    //         if (e.key === \"e\" || e.key === \"E\") {\r\n    //             this.props.editAnnotationHandler();\r\n    //         }\r\n    //         if (e.key === \"q\" || e.key === \"Q\") {\r\n    //             this.props.addQuestion();\r\n    //         }\r\n    //         if (e.key === \"l\" || e.key === \"L\") {\r\n    //             this.props.addLineBreak();\r\n    //         }\r\n    //         if (e.key === \"n\" || e.key === \"N\") {\r\n    //             this.props.addNote();\r\n    //         }\r\n    //         if (e.key === \"p\" || e.key === \"P\") {\r\n    //             this.props.addPageBreak();\r\n    //         }\r\n    //     };\r\n    //     document.addEventListener(\"keyup\", this.keyHandler, { once: true });\r\n    // }\r\n    // componentWillUnmount() {\r\n    //     document.removeEventListener(\"keyup\", this.keyHandler);\r\n    // }\r\n    render() {\r\n        const allowPageBreak = this.props.addPageBreak != null;\r\n        const allowLineBreak = this.props.addLineBreak != null;\r\n        return (\r\n            <>\r\n                <div className={styles.header}>\r\n                    <Button\r\n                        noBezel={true}\r\n                        icon={\r\n                            <NoteIcon\r\n                                width={ICON_SIZE}\r\n                                height={ICON_SIZE}\r\n                                style={{ fill: \"#fff\" }}\r\n                            />\r\n                        }\r\n                        backgroundColor=\"transparent\"\r\n                        // accessoryType={this.props.addNote ? \"ADD\" : null}\r\n                        onClick={this.props.addNote}\r\n                        disabled={this.props.addNote ? false : true}\r\n                        align=\"center\"\r\n                        tooltipTitle=\"Note\"\r\n                        shortcut=\"n\"\r\n                    />\r\n                    <Button\r\n                        noBezel={true}\r\n                        icon={\r\n                            <QuestionIcon\r\n                                width={ICON_SIZE}\r\n                                height={ICON_SIZE}\r\n                                style={{ fill: \"#fff\" }}\r\n                            />\r\n                        }\r\n                        // accessoryType={this.props.addQuestion ? \"ADD\" : null}\r\n                        onClick={this.props.addQuestion}\r\n                        disabled={this.props.addQuestion ? false : true}\r\n                        align=\"left\"\r\n                        backgroundColor=\"transparent\"\r\n                        tooltipTitle=\"Question\"\r\n                        shortcut=\"q\"\r\n                    />\r\n                    <Button\r\n                        noBezel={true}\r\n                        color=\"#fff\"\r\n                        fontSize={`${ICON_SIZE}px`}\r\n                        icon=\"&#182;\"\r\n                        // accessoryType={allowLineBreak ? \"ADD\" : null}\r\n                        onClick={this.props.addLineBreak}\r\n                        disabled={!allowLineBreak}\r\n                        align=\"left\"\r\n                        backgroundColor=\"transparent\"\r\n                        tooltipTitle=\"LineBreak\"\r\n                        shortcut=\"l\"\r\n                    />\r\n                    <Button\r\n                        noBezel={true}\r\n                        icon={\r\n                            <PageBreakIcon\r\n                                width={ICON_SIZE}\r\n                                height={ICON_SIZE}\r\n                                style={{ fill: \"#fff\" }}\r\n                            />\r\n                        }\r\n                        // accessoryType={allowPageBreak ? \"ADD\" : null}\r\n                        onClick={this.props.addPageBreak}\r\n                        disabled={!allowPageBreak}\r\n                        align=\"left\"\r\n                        backgroundColor=\"transparent\"\r\n                        tooltipTitle=\"PageBreak\"\r\n                        shortcut=\"p\"\r\n                    />\r\n\r\n                    <Button\r\n                        onClick={this.props.editAnnotationHandler}\r\n                        // className={styles.edit}\r\n                        backgroundColor=\"transparent\"\r\n                        noBezel={true}\r\n                        icon={\r\n                            <PencilAltIcon\r\n                                width={ICON_SIZE}\r\n                                height={ICON_SIZE}\r\n                                style={{ fill: \"#fff\" }}\r\n                            />\r\n                        }\r\n                        tooltipTitle=\"Edit\"\r\n                        shortcut=\"e\"\r\n                    />\r\n                </div>\r\n                {/* <div\r\n                    onClick={() => this.props.closeAnnotation()}\r\n                    className={styles.Anotation_closeBtn}\r\n                >\r\n                    x\r\n                </div> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnnotationControlsHeader;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"\n});\n\nvar SvgPencilAltIcon = function SvgPencilAltIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\"\n  }, props), _ref);\n};\n\nexport default SvgPencilAltIcon;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z\"\n});\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar SvgNote = function SvgNote(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\"\n  }, props), _ref, _ref2);\n};\n\nexport default SvgNote;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M3 0h24v15H3z\"\n});\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  stroke: \"currentColor\",\n  strokeWidth: 3,\n  d: \"M0 20h8M11 20h8M22 20h8\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M3 25h24v15H3z\"\n});\n\nvar SvgPageBreakIcon = function SvgPageBreakIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 30 40\",\n    fill: \"currentColor\"\n  }, props), _ref, _ref2, _ref3);\n};\n\nexport default SvgPageBreakIcon;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z\"\n});\n\nvar SvgQuestionAnswer = function SvgQuestionAnswer(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\"\n  }, props), _ref, _ref2);\n};\n\nexport default SvgQuestionAnswer;"],"mappings":";;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAAA;;;;;AACA;AACA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AADA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AATA;AAWA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AAfA;AAmBA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAbA;AAwBA;;;;AA3HA;AACA;AA6HA;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}