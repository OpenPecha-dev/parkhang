{"version":3,"file":"3.parkhang-dev.js","sources":["webpack://parkhang/./app/components/Header/AccountButton.js","webpack://parkhang/./app/components/Header/AccountOverlay.css","webpack://parkhang/./app/components/Header/AccountOverlay.js","webpack://parkhang/./app/components/Header/Header.css","webpack://parkhang/./app/components/Header/Header.js","webpack://parkhang/./app/components/Header/ToggleTheme.js","webpack://parkhang/./app/components/Header/index.js","webpack://parkhang/./app/components/LocaleSwitcher/LocaleSwitcher.css","webpack://parkhang/./app/components/LocaleSwitcher/LocaleSwitcher.js","webpack://parkhang/./app/components/UI/NavigationButton.css","webpack://parkhang/./app/components/UI/NavigationButton.js","webpack://parkhang/./app/components/utility/useLocalStorage.js","webpack://parkhang/./app/images/discourse_user.svg","webpack://parkhang/./app/images/hamburger.svg","webpack://parkhang/./app/images/lopenling_logo_173x.png","webpack://parkhang/./node_modules/@mui/icons-material/Brightness4.js","webpack://parkhang/./node_modules/@mui/icons-material/Brightness7.js","webpack://parkhang/./node_modules/@mui/icons-material/Language.js","webpack://parkhang/./node_modules/@mui/icons-material/Logout.js","webpack://parkhang/./node_modules/@mui/icons-material/PersonAdd.js","webpack://parkhang/./node_modules/@mui/icons-material/Settings.js"],"sourcesContent":["// @flow\r\nimport React from \"react\";\r\nimport { Avatar, Tooltip, IconButton } from \"@mui/material\";\r\n\r\ntype Props = {\r\n    name: string,\r\n    onClick: () => void,\r\n};\r\n\r\nfunction stringToColor(string: string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = \"#\";\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name: string) {\r\n    let nameformat =\r\n        name.split(\" \")[1] !== undefined\r\n            ? `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\r\n            : `${name.split(\" \")[0][0]}`;\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: nameformat,\r\n    };\r\n}\r\n\r\nconst AccountButton = (props: Props) => {\r\n    return (\r\n        <Tooltip title=\"Account settings\">\r\n            <IconButton\r\n                onClick={props.onClick}\r\n                id=\"account-menu-button\"\r\n                size=\"small\"\r\n                sx={{ ml: 2 }}\r\n                aria-controls={open ? \"account-menu\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? \"true\" : undefined}\r\n            >\r\n                <Avatar\r\n                    {...stringAvatar(props.name)}\r\n                    sx={{ width: 28, height: 28 }}\r\n                />\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default AccountButton;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"AccountOverlay---overlay\",\"username\":\"AccountOverlay---username\"};","// @flow\r\nimport React from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport User from \"lib/User\";\r\nimport styles from \"./AccountOverlay.css\";\r\nimport { Avatar, MenuItem, Divider, ListItemIcon, Link } from \"@mui/material\";\r\nimport PersonAdd from \"@mui/icons-material/PersonAdd\";\r\nimport Settings from \"@mui/icons-material/Settings\";\r\nimport Logout from \"@mui/icons-material/Logout\";\r\n\r\ntype Props = {\r\n    top: number,\r\n    right: number,\r\n    user: User,\r\n    intl: { formatMessage: ({ [id: string]: string }) => string },\r\n    visible: Boolean,\r\n};\r\n\r\nconst AccountOverlay = (props: Props) => {\r\n    let signOutTitle = props.intl.formatMessage({\r\n        id: \"header.logout\",\r\n    });\r\n    return (\r\n        <>\r\n            <MenuItem>{props.user.name || \"Guest\"}</MenuItem>\r\n            <Divider />\r\n            <MenuItem>\r\n                <Link\r\n                    href=\"https://www.lopenling.org\"\r\n                    style={{ textDecoration: \"none\", color: \"gray\" }}\r\n                >\r\n                    <ListItemIcon>\r\n                        <Settings fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Settings\r\n                </Link>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <Link\r\n                    href=\"/discourse/logout/\"\r\n                    style={{ textDecoration: \"none\", color: \"gray\" }}\r\n                >\r\n                    <ListItemIcon>\r\n                        <Logout fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    {signOutTitle}\r\n                </Link>\r\n            </MenuItem>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AccountOverlay);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-tint\":\"#88af8e\",\"blue-tint\":\"#024279\",\"active-button\":\"#00746b\",\"header-height\":\"40px\",\"mainTint\":\"#024279\",\"activeButton\":\"#00746b\",\"headerHeight\":\"40px\",\"header\":\"Header---header\",\"logo\":\"Header---logo\",\"navigationButton\":\"Header---navigationButton\",\"loginButton\":\"Header---loginButton\",\"ButtonText\":\"Header---ButtonText\",\"buttonLink\":\"Header---buttonLink\",\"controls\":\"Header---controls\"};","// @flow\r\nimport React, { useCallback } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./Header.css\";\r\nimport User from \"lib/User\";\r\nimport type { AppState } from \"reducers\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport LocaleSwitcher from \"components/LocaleSwitcher/LocaleSwitcher\";\r\nimport NavigationButton from \"components/UI/NavigationButton\";\r\nimport AccountButton from \"./AccountButton\";\r\nimport AccountOverlay from \"./AccountOverlay\";\r\nimport {\r\n    getTextListVisible,\r\n    getAccountOverlayVisible,\r\n    getUser,\r\n    getActiveLocale,\r\n    getTheme,\r\n    getSelectedText,\r\n} from \"reducers\";\r\nimport * as actions from \"actions\";\r\nimport lopenlingLogo from \"images/lopenling_logo_173x.png\";\r\nimport UserIcon from \"images/discourse_user.svg\";\r\nimport { NavLink } from \"redux-first-router-link\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\nimport { pageList } from \"reducers/pages\";\r\nimport {\r\n    Button,\r\n    Tooltip,\r\n    Stack,\r\n    Box,\r\n    Menu,\r\n    IconButton,\r\n    MenuItem,\r\n    AppBar,\r\n} from \"@mui/material\";\r\nimport { Person as PersonIcon, Menu as MenuIcon } from \"@mui/icons-material\";\r\nimport _ from \"lodash\";\r\ntype LoginProps = {\r\n    successRedirect: string,\r\n    csrfToken: string,\r\n};\r\nlet linkToEditor = \"/editor\";\r\n\r\nexport const LoginControls = (props: LoginProps) => (\r\n    <Stack direction=\"row\" spacing={2}>\r\n        <a href={SSO_SIGNUP_URL}>\r\n            <Button\r\n                variant=\"contained\"\r\n                className={styles.ButtonText}\r\n                style={{\r\n                    padding: \"6px 10px\",\r\n                    boxShadow:\r\n                        \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n                }}\r\n            >\r\n                <FormattedMessage id=\"header.signUp\" />\r\n            </Button>\r\n        </a>\r\n\r\n        <form method=\"post\" action=\"/discourse/login_redirect/\">\r\n            {/* <IconButton>\r\n                <UserIcon width=\"11\" />\r\n            </IconButton> */}\r\n            <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                className={styles.ButtonText}\r\n                sx={{\r\n                    padding: \"6px 10px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    boxShadow:\r\n                        \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n                }}\r\n            >\r\n                <PersonIcon style={{ height: 16, width: 16 }} />\r\n                <FormattedMessage id=\"header.login\" />\r\n            </Button>\r\n            <input\r\n                type=\"hidden\"\r\n                name=\"csrfmiddlewaretoken\"\r\n                value={props.csrfToken}\r\n            />\r\n            <input\r\n                type=\"hidden\"\r\n                name=\"success_redirect\"\r\n                value={props.successRedirect}\r\n            />\r\n        </form>\r\n    </Stack>\r\n);\r\n\r\ntype LoggedInControlsProps = {\r\n    user: User,\r\n    overlayVisible: boolean,\r\n    accountButtonClicked: () => void,\r\n};\r\n\r\nexport const LoggedInControls = (props: LoggedInControlsProps) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        props.accountButtonClicked();\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    return (\r\n        <div className={styles.controls}>\r\n            <AccountButton name={props.user.name} onClick={handleClick} />\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                id=\"account-menu\"\r\n                open={props.overlayVisible || false}\r\n                onClose={props.accountButtonClicked}\r\n                transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n                anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n                style={{ top: 20 }}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        overflow: \"visible\",\r\n                        filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\r\n                        mt: 1.5,\r\n                        \"& .MuiAvatar-root\": {\r\n                            width: 32,\r\n                            height: 32,\r\n                            ml: -0.5,\r\n                            mr: 1,\r\n                        },\r\n                        \"&:before\": {\r\n                            content: '\"\"',\r\n                            display: \"block\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            right: 14,\r\n                            width: 10,\r\n                            height: 10,\r\n                            bgcolor: \"background.paper\",\r\n                            transform: \"translateY(-50%) rotate(45deg)\",\r\n                            zIndex: 0,\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <AccountOverlay top={60} right={0} user={props.user} />\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype HeaderProps = {\r\n    user: User,\r\n    activeLocale: string,\r\n    accountOverlayVisible: boolean,\r\n    navigationButtonClicked: () => void,\r\n    intl: { formatMessage: ({ [id: string]: string }) => string },\r\n    accountButtonClicked: () => void,\r\n    successRedirect: string,\r\n    csrfToken: string,\r\n};\r\n\r\nexport const Header = (props: HeaderProps) => {\r\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n    const selectedText = props.selectedText;\r\n    let controls = null;\r\n    if (props.user.isLoggedIn) {\r\n        controls = (\r\n            <LoggedInControls\r\n                user={props.user}\r\n                overlayVisible={props.accountOverlayVisible}\r\n                accountButtonClicked={props.accountButtonClicked}\r\n            />\r\n        );\r\n    } else {\r\n        controls = (\r\n            <LoginControls\r\n                successRedirect={props.successRedirect}\r\n                csrfToken={props.csrfToken}\r\n            />\r\n        );\r\n    }\r\n\r\n    let toggleTitle = props.intl?.formatMessage({\r\n        id: \"header.toggleTextList\",\r\n    });\r\n\r\n    const LinkRef = React.forwardRef((props, ref) => (\r\n        <div ref={ref}>\r\n            <NavLink {...props} />\r\n        </div>\r\n    ));\r\n    React.useEffect(() => {\r\n        if (selectedText) {\r\n            linkToEditor = `/texts/${selectedText.id}`;\r\n        }\r\n    }, [selectedText]);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n    const themeChange = useCallback((e) => props.themeButtonClicked(e), []);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            color=\"navbar\"\r\n            sx={{ boxShadow: 1, zIndex: 3,display: props.page==='Vote' ?'none':'block' }}\r\n            // className={styles.header}\r\n        >\r\n            <Stack\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent={\"space-between\"}\r\n                sx={{\r\n                    height: \"100%\",\r\n                    maxWidth: \"100%\",\r\n                    paddingInline: 1,\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        flexGrow: 1,\r\n                        gap: 3,\r\n                        display: { xs: \"none\", md: \"flex\" },\r\n                        alignItems: { md: \"center\" },\r\n                    }}\r\n                >\r\n                        <NavLink to=\"/\">\r\n                            <div className={styles.logo}>\r\n                                <img\r\n                                    src={lopenlingLogo}\r\n                                    height=\"37\"\r\n                                    width={173}\r\n                                    alt=\"parkhang-logo\"\r\n                                />\r\n                            </div>\r\n                        </NavLink>\r\n\r\n                    {/* {props.page === \"Editors\" && (\r\n                        <NavigationButton\r\n                            onClick={props.navigationButtonClicked}\r\n                            className={styles.navigationButton}\r\n                            title={toggleTitle}\r\n                            isListVisible={props.textListVisible}\r\n                        />\r\n                    )} */}\r\n                    <Box display={{ xs: \"none\", md: \"flex\" }}>\r\n                        {pageList.map((page, i) => {\r\n                            return (\r\n                                <Button\r\n                                    to={\r\n                                        page.pageName === \"Editors\"\r\n                                            ? linkToEditor\r\n                                            : page.url\r\n                                    }\r\n                                    variant=\"text\"\r\n                                    component={LinkRef}\r\n                                    color=\"links\"\r\n                                    key={page.id}\r\n                                >\r\n                                    <FormattedMessage id={page.id} />\r\n                                </Button>\r\n                            );\r\n                        })}\r\n\r\n                        <Tooltip title=\"Forum\">\r\n                            <Button\r\n                                href={\"https://lopenling.org\"}\r\n                                variant=\"text\"\r\n                                component={\"a\"}\r\n                                color=\"links\"\r\n                            >\r\n                                <FormattedMessage id={\"lopenlingForum\"} />\r\n                            </Button>\r\n                        </Tooltip>\r\n                        <Button\r\n                            href={\"https://www.nalanda.works\"}\r\n                            variant=\"text\"\r\n                            component={\"a\"}\r\n                            color=\"links\"\r\n                        >\r\n                            <FormattedMessage id={\"Nalanda\"} />\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n                <Box sx={{ display: { xs: \"block\", md: \"none\" } }}>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"account-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleOpenNavMenu}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorElNav}\r\n                        anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\",\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"left\",\r\n                        }}\r\n                        open={Boolean(anchorElNav)}\r\n                        onClose={handleCloseNavMenu}\r\n                        sx={{ display: { xs: \"block\", md: \"none\" } }}\r\n                    >\r\n                        <MenuItem onClick={handleCloseNavMenu}>\r\n                            <Button\r\n                                to={\"/\"}\r\n                                color=\"links\"\r\n                                component={LinkRef}\r\n                                variant=\"text\"\r\n                            >\r\n                                <FormattedMessage id={\"header.texts\"} />\r\n                            </Button>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={handleCloseNavMenu}>\r\n                            <Button\r\n                                to={linkToEditor}\r\n                                component={LinkRef}\r\n                                variant=\"text\"\r\n                                color=\"links\"\r\n                                // disabled={_.isEmpty(props.text)}\r\n                            >\r\n                                <FormattedMessage id={\"header.editor\"} />\r\n                            </Button>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={handleCloseNavMenu}>\r\n                            <Button\r\n                                href={\"https://www.lopenling.org\"}\r\n                                color=\"links\"\r\n                                variant=\"text\"\r\n                                component={\"a\"}\r\n                            >\r\n                                <FormattedMessage id={\"lopenlingForum\"} />\r\n                            </Button>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={handleCloseNavMenu}>\r\n                            <Button\r\n                                href={\"https://www.nalanda.works\"}\r\n                                color=\"links\"\r\n                                variant=\"text\"\r\n                                component={\"a\"}\r\n                            >\r\n                                <FormattedMessage id={\"Nalanda\"} />\r\n                            </Button>\r\n                        </MenuItem>\r\n\r\n                    \r\n                    </Menu>\r\n                </Box>\r\n                <Stack\r\n                    direction=\"row\"\r\n                    alignItems=\"center\"\r\n                    sx={{ float: { sx: \"right\" } }}\r\n                >\r\n                    <LocaleSwitcher />\r\n                    {controls}\r\n                    <ToggleTheme\r\n                        theme={props.theme}\r\n                        changeTheme={themeChange}\r\n                    />\r\n                </Stack>\r\n            </Stack>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState): { user: User } => {\r\n    const user = getUser(state);\r\n    const activeLocale = getActiveLocale(state);\r\n    const successRedirect = document.location.pathname;\r\n    // TODO: move global CSRF_TOKEN into redux\r\n    const csrfToken = CSRF_TOKEN;\r\n    const page = state.page;\r\n    return {\r\n        page:state.page,\r\n        user: user,\r\n        activeLocale: activeLocale,\r\n        textListIsVisible: getTextListVisible(state),\r\n        accountOverlayVisible: getAccountOverlayVisible(state),\r\n        textListVisible: getTextListVisible(state),\r\n        successRedirect: successRedirect,\r\n        csrfToken: csrfToken,\r\n        theme: getTheme(state),\r\n        text: getSelectedText(state),\r\n        page,\r\n        selectedText: getSelectedText(state),\r\n    };\r\n};\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n    return {\r\n        ...ownProps,\r\n        ...stateProps,\r\n        navigationButtonClicked: () => {\r\n            dispatchProps.dispatch(\r\n                actions.changedTextListVisible(!stateProps.textListIsVisible)\r\n            );\r\n        },\r\n        accountButtonClicked: () => {\r\n            dispatchProps.dispatch(\r\n                actions.changedAccountOverlay(!stateProps.accountOverlayVisible)\r\n            );\r\n        },\r\n        themeButtonClicked: (payload) => {\r\n            dispatchProps.dispatch(actions.changeTheme(payload));\r\n        },\r\n    };\r\n};\r\n\r\nconst HeaderContainer = connect(mapStateToProps, null, mergeProps)(Header);\r\n\r\nexport default injectIntl(HeaderContainer);\r\n","import { Box, IconButton } from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport useLocalStorage from \"components/utility/useLocalStorage\";\r\nfunction ToggleTheme({ changeTheme }) {\r\n    const [selectedMode, setSelectedMode] = useLocalStorage(\"theme\", \"light\");\r\n    const theme = useTheme();\r\n    const handleThemeChange = () => {\r\n        if (theme.palette.mode === \"dark\") {\r\n            setSelectedMode(\"light\");\r\n        } else {\r\n            setSelectedMode(\"dark\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        changeTheme(selectedMode);\r\n    }, [selectedMode]);\r\n\r\n    return (\r\n        <IconButton sx={{ ml: 1 }} onClick={handleThemeChange} color=\"inherit\">\r\n            {theme.palette.mode === \"dark\" ? (\r\n                <Brightness7Icon />\r\n            ) : (\r\n                <Brightness4Icon />\r\n            )}\r\n        </IconButton>\r\n    );\r\n}\r\n\r\nexport default ToggleTheme;\r\n","export { default } from \"./Header\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"localeOptions\":\"LocaleSwitcher---localeOptions\",\"localeOption\":\"LocaleSwitcher---localeOption\",\"selected\":\"LocaleSwitcher---selected\"};","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport * as reducers from \"reducers\";\r\nimport * as actions from \"actions\";\r\nimport { LocalesList } from \"reducers/locales\";\r\nimport type { AppState } from \"reducers\";\r\nimport styles from \"./LocaleSwitcher.css\";\r\nimport { Select } from \"@mui/material\";\r\ntype Props = {\r\n  locales: LocalesList,\r\n  selectLocale: (locale: string) => void,\r\n};\r\n\r\nclass LocaleSwitcher extends React.Component<Props> {\r\n  render() {\r\n    let locales = this.props.locales.map((localeData) => {\r\n      return (\r\n        <option\r\n          key={localeData.locale}\r\n          value={localeData.locale}\r\n          className={styles.localeOption}\r\n        >\r\n          {/* <div\r\n            key={localeData.locale}\r\n            // onClick={() => this.props.selectLocale(localeData.locale)}\r\n          > */}\r\n          {localeData.displayName}\r\n          {/* </div> */}\r\n        </option>\r\n      );\r\n    });\r\n    return (\r\n      <div style={{ display: \"flex\" }}>\r\n        <LanguageIcon />\r\n        <select\r\n          onChange={(e) => this.props.selectLocale(e.target.value)}\r\n          value={this.props.activeLocale}\r\n          className={styles.localeOptions}\r\n        >\r\n          {locales}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: AppState) {\r\n  const locales = reducers.getLocales(state);\r\n  const activeLocale = reducers.getActiveLocale(state);\r\n  return {\r\n    locales: locales,\r\n    activeLocale,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    selectLocale: (locale: string) => {\r\n      dispatch(actions.selectedLocale(locale));\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSwitcher);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NavigationButton---button\"};","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./NavigationButton.css\";\r\nimport HamburgerIcon from \"images/hamburger.svg\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\ntype Props = {\r\n    onClick?: () => void,\r\n    className?: string,\r\n    title?: string,\r\n    isListVisible: Boolean,\r\n};\r\n\r\nconst NavigationButton = (props: Props) => {\r\n    let classNames = [styles.button];\r\n    if (props.className) {\r\n        classNames.push(props.className);\r\n    }\r\n    // if (props.isListVisible) return null;\r\n    return (\r\n        <IconButton\r\n            aria-label=\"Navigation\"\r\n            className={classnames(...classNames)}\r\n            onClick={props.onClick}\r\n            title={props.title}\r\n        >\r\n            {!props.isListVisible ? (\r\n                <HamburgerIcon fill=\"currentColor\" />\r\n            ) : (\r\n                <CloseIcon fill=\"currentColor\" />\r\n            )}\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default NavigationButton;\r\n","import {useState,useEffect} from 'react'\r\n\r\nfunction getSavedValue(key,initialValue){\r\n    const savedValue=JSON.parse(localStorage.getItem(key))\r\n    if (savedValue) return savedValue\r\n    \r\n    // if (initialValue instanceof function) return initialValue()\r\n\r\n    return initialValue\r\n}\r\n\r\nexport default function useLocalStorage(key,initialValue){\r\n    const [value,setValue]=useState(()=>{\r\n        return getSavedValue(key,initialValue)\r\n         })\r\n\r\n\r\n         useEffect(()=>{\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n         },[value])\r\n    return [value,setValue]\r\n\r\n}","var _path;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar SvgDiscourseUser = function SvgDiscourseUser(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 448 512\",\n    fill: \"currentColor\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n  })));\n};\n\nexport default SvgDiscourseUser;","var _path;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar SvgHamburger = function SvgHamburger(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 20\",\n    className: \"hamburgerIcon\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"line\",\n    stroke: \"currentColor\",\n    strokeWidth: 3,\n    d: \"M0 2h24M0 10h24M0 18h24\"\n  })));\n};\n\nexport default SvgHamburger;","export default __webpack_public_path__ + \"ea9a1cd4d17aad5a9c5bdfde6acaad2e.png\";","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z\"\n}), 'Brightness4');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\n}), 'Brightness7');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z\"\n}), 'Language');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m17 7-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z\"\n}), 'Logout');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'PersonAdd');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');\n\nexports.default = _default;"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AADA;AAGA;AAEA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}