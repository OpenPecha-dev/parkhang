{"version":3,"file":"5.parkhang-dev.js","sources":["webpack://parkhang/./app/components/App/Switcher.js","webpack://parkhang/./app/components/App/components.js","webpack://parkhang/./node_modules/react-universal-component/dist/requireById sync ^.*$"],"sourcesContent":["import React from \"react\";\r\nimport universal from \"react-universal-component\";\r\nimport Loader from \"react-loader\";\r\nimport { connect } from \"react-redux\";\r\nimport * as components from \"./components\";\r\n\r\nfunction Switcher(props) {\r\n    const { page, isLoading } = props;\r\n    const Component = components[page];\r\n\r\n    return (\r\n        // <UniversalComponent\r\n        //     page={page}\r\n        //     isLoading={page === \"Editors\" ? isLoading : false}\r\n        // />\r\n        <Component />\r\n    );\r\n}\r\n\r\n// const UniversalComponent = universal(\r\n//     (props) => import(`components/${props.page}`),\r\n//     {\r\n//         minDelay: 300,\r\n//         chunkName: (props) => props.page,\r\n//         loading: () => <Loader />,\r\n//         ignoreBabelRename: true,\r\n//         error: (e) => (\r\n//             <div className=\"notFound\">\r\n//                 PAGE NOT FOUND - 404, click <a href=\"/\">Here</a>\r\n//                 {`${e.toString()}`}\r\n//             </div>\r\n//         ),\r\n//         loadingTransition: true,\r\n//     }\r\n// );\r\nconst mapState = ({ page, direction, ...state }) => ({\r\n    page,\r\n    isLoading: !state.data.loadedInitialData,\r\n});\r\n\r\nexport default connect(mapState)(Switcher);\r\n","// components.js\r\nimport React, { Suspense } from \"react\";\r\nconst EditorContainer = React.lazy(() => import(\"components/Editors\"));\r\nimport HomePageContainer from \"components/HomePage\";\r\nconst HomePage = () => <HomePageContainer />;\r\n\r\nconst Editors = () => (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n        <EditorContainer />\r\n    </Suspense>\r\n);\r\n\r\nconst mapStateToProps = ({ location }) => ({\r\n    userId: location.payload.id,\r\n});\r\n\r\nconst NotFound = () => <h3>404</h3>;\r\n\r\nexport { HomePage, Editors, NotFound };\r\n","var map = {\n\t\".\": \"./node_modules/react-universal-component/dist/requireById/index.js\",\n\t\"./\": \"./node_modules/react-universal-component/dist/requireById/index.js\",\n\t\"./index\": \"./node_modules/react-universal-component/dist/requireById/index.js\",\n\t\"./index.js\": \"./node_modules/react-universal-component/dist/requireById/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/react-universal-component/dist/requireById sync recursive ^.*$\";"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AACA;AAIA;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}