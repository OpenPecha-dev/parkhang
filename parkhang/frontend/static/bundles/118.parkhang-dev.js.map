{"version":3,"file":"118.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail/TextHeadingContainer.js"],"sourcesContent":["// @flow\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { batchActions } from \"redux-batched-actions\";\r\nimport TextHeading from \"./TextHeading\";\r\nimport type { Props } from \"./TextHeading\";\r\nimport {\r\n    selectedTextWitness,\r\n    changedActiveAnnotation,\r\n    exportWitness,\r\n    changedShowPageImages,\r\n    changedTextFontSize,\r\n} from \"actions\";\r\nimport * as reducers from \"reducers\";\r\nimport Witness from \"lib/Witness\";\r\nimport type { AppState } from \"reducers\";\r\n\r\nconst mapStateToProps = (state: AppState): {} => {\r\n    const selectedText = reducers.getSelectedText(state);\r\n    let witnesses = [];\r\n    let exportingWitness = false;\r\n    let selectedWitness;\r\n    if (selectedText) {\r\n        witnesses = reducers.getTextWitnesses(state, selectedText.id);\r\n        const selectedWitnessId = reducers.getSelectedTextWitnessId(\r\n            state,\r\n            selectedText.id\r\n        );\r\n        if (selectedWitnessId) {\r\n            selectedWitness = reducers.getWitness(state, selectedWitnessId);\r\n            exportingWitness = reducers.getExportingWitness(\r\n                state,\r\n                selectedWitnessId\r\n            );\r\n        } else {\r\n            selectedWitness = reducers.getWorkingWitness(\r\n                state,\r\n                selectedText.id\r\n            );\r\n        }\r\n    }\r\n    let showPageImages = reducers.showPageImages(state);\r\n    let textFontSize = reducers.getTextFontSize(state);\r\n\r\n    return {\r\n        witnesses,\r\n        selectedText,\r\n        selectedWitness,\r\n        exportingWitness,\r\n        showPageImages,\r\n        textFontSize,\r\n    };\r\n};\r\n\r\nconst mergeProps = (stateProps: Props, dispatchProps, ownProps): {} => {\r\n    const { dispatch } = dispatchProps;\r\n    const { selectedText } = stateProps;\r\n    return {\r\n        ...stateProps,\r\n        ...ownProps,\r\n        onToggledPageImages: (showImages: boolean) => {\r\n            dispatch(changedShowPageImages(showImages));\r\n        },\r\n        onChangedFontSize: (fontSize: number) => {\r\n            dispatch(changedTextFontSize(fontSize));\r\n        },\r\n        onSelectedWitness: (witness: Witness) => {\r\n            dispatch(selectedTextWitness(selectedText.id, witness.id));\r\n        },\r\n        onExport: () => {\r\n            dispatch(exportWitness(stateProps.selectedWitness.id, \"docx\"));\r\n        },\r\n    };\r\n};\r\n\r\nconst TextHeadingContainer = connect(\r\n    mapStateToProps,\r\n    null,\r\n    mergeProps\r\n)(TextHeading);\r\n\r\nexport default TextHeadingContainer;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AAMA;;;;A","sourceRoot":""}