{"version":3,"file":"11.parkhang-dev.js","sources":["webpack://parkhang/./app/components/UI/Accessory.css","webpack://parkhang/./app/components/UI/Accessory.js","webpack://parkhang/./app/components/UI/ApplyTooltip.js","webpack://parkhang/./app/components/UI/Button.css","webpack://parkhang/./app/components/UI/Button.js","webpack://parkhang/./app/css/colour.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-tint\":\"#88af8e\",\"blue-tint\":\"#024279\",\"active-button\":\"#00746b\",\"mainTint\":\"#024279\",\"activeButton\":\"#00746b\",\"accessory\":\"Accessory---accessory\"};","import React from \"react\";\r\nimport styles from \"./Accessory.css\";\r\nimport colours from \"css/colour.css\";\r\n\r\nexport const accessoryTypes = {\r\n    ADD: \"+\",\r\n    DELETE: \"\\u00d7\"\r\n};\r\nexport type AccessoryType = $Keys<typeof accessoryTypes>;\r\n\r\ntype Props = {\r\n    type: AccessoryType,\r\n    title?: string,\r\n    onClick?: () => void,\r\n    backgroundColor?: string,\r\n    color?: string\r\n};\r\n\r\nconst Accessory = (props: Props) => {\r\n    let style = {};\r\n    style.backgroundColor = props.backgroundColor || \"\";\r\n    style.color = props.color || \"#fff\";\r\n\r\n    return (\r\n        <div\r\n            className={styles.accessory}\r\n            title={props.title}\r\n            onClick={props.onClick}\r\n            style={style}\r\n        >\r\n            {accessoryTypes[props.type]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accessory;\r\n","import React from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Tooltip, Tootip } from \"@mui/material\";\r\nfunction ApplyTooltip({\r\n    children,\r\n    tooltipName,\r\n    format = null,\r\n    className = \"\",\r\n    shortcut = \"\",\r\n    on = false,\r\n}) {\r\n    return (\r\n        <>\r\n            <div\r\n                data-tip\r\n                data-for={tooltipName}\r\n                className={className}\r\n                style={{ width: \"100%\" }}\r\n            >\r\n                {!on ? (\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        followCursor\r\n                        title={\r\n                            format ? (\r\n                                <FormattedMessage id={format} />\r\n                            ) : (\r\n                                <span>\r\n                                    {tooltipName}\r\n                                    {` [${shortcut}]`}\r\n                                </span>\r\n                            )\r\n                        }\r\n                    >\r\n                        {children}\r\n                    </Tooltip>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ApplyTooltip;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button---button\",\"buttonNoBezel\":\"Button---buttonNoBezel\",\"active\":\"Button---active\",\"leftAlign\":\"Button---leftAlign\",\"title\":\"Button---title\",\"icon\":\"Button---icon\"};","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport colours from \"css/colour.css\";\r\nimport styles from \"./Button.css\";\r\nimport Accessory from \"./Accessory\";\r\nimport ApplyTooltip from \"./ApplyTooltip\";\r\nexport type Alignment = \"left\" | \"center\" | \"right\";\r\n\r\ntype Props = {\r\n    title: string,\r\n    color?: string,\r\n    backgroundColor?: string,\r\n    icon?: any,\r\n    align?: Alignment,\r\n    isActive?: boolean,\r\n    accessoryType?: AccessoryType,\r\n    onClick?: () => void,\r\n    noBezel?: boolean,\r\n    disabled?: boolean,\r\n    tooltipTitle: String,\r\n    shortcut?: String,\r\n};\r\n\r\nexport default class Button extends React.Component<Props> {\r\n    render() {\r\n        let color = this.props.color || \"#ffffff\";\r\n        let bgColour = this.props.backgroundColor || colours.mainTint;\r\n        let fontSize = this.props.fontSize || \"14px\";\r\n        let classNames = this.props.noBezel\r\n            ? [styles.buttonNoBezel]\r\n            : [styles.button];\r\n        let tooltipTitle = this.props.tooltipTitle || \"\";\r\n        if (this.props.isActive) classNames.push(styles.active);\r\n        const className = classnames(...classNames);\r\n        let shortcut = this.props.shortcut || \"\";\r\n        let style = {\r\n            fontSize,\r\n            color: color,\r\n            backgroundColor: bgColour,\r\n        };\r\n        if (this.props.align) style.textAlign = this.props.align;\r\n\r\n        return (\r\n            <ApplyTooltip\r\n                tooltipName={tooltipTitle}\r\n                shortcut={shortcut}\r\n                on={this.props.disabled}\r\n            >\r\n                <button\r\n                    style={style}\r\n                    className={className}\r\n                    onClick={this.props.onClick}\r\n                    disabled={this.props.disabled}\r\n                >\r\n                    {this.props.icon && (\r\n                        <div className={styles.icon}>{this.props.icon}</div>\r\n                    )}\r\n                    {this.props.title && (\r\n                        <span className={styles.title}>{this.props.title}</span>\r\n                    )}\r\n                    {/* {this.props.accessoryType && (\r\n                    <Accessory type={this.props.accessoryType} />\r\n                )} */}\r\n                </button>\r\n            </ApplyTooltip>\r\n        );\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-tint\":\"#88af8e\",\"blue-tint\":\"#024279\",\"active-button\":\"#00746b\",\"mainTint\":\"#024279\",\"activeButton\":\"#00746b\"};"],"mappings":";;;;;;;;;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAaA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAEA;AAAA;AALA;AAsBA;AACA;AACA;;;;;;;;;;;AC5CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAGA;AAAA;AAQA;;;;AA3CA;AACA;;;;;;;;;;;;ACxBA;AACA;;;;A","sourceRoot":""}