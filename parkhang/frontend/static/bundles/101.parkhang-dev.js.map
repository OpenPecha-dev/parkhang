{"version":3,"file":"101.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail2/TableOfContent/TableOfContent.js","webpack://parkhang/./node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport Loader from \"react-loader\";\r\n\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: \"auto\",\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"0\",\r\n            cursor: \"pointer\",\r\n            \"&:focus\": {\r\n                width: \"20ch\",\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction TableOfContent() {\r\n    let data = [\r\n        { Id: 1, Title: \"chapter 1\", segment_id: 0 },\r\n        { Id: 2, Title: \"chapter 2\", segment_id: 400 },\r\n    ];\r\n    let loaded = data.length > 0 ? true : false;\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                bgcolor: \"heading.main\",\r\n                color: \"text.primary\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                paddingInline: 2,\r\n            }}\r\n        >\r\n            <Toolbar\r\n                sx={{\r\n                    justifyContent: \"space-between\",\r\n                    paddingLeft: \"0 !important\",\r\n                    margin: 0,\r\n                }}\r\n            >\r\n                <Typography textTransform={\"uppercase\"} component=\"h6\">\r\n                    Table Of Content\r\n                </Typography>\r\n                <Search>\r\n                    <SearchIconWrapper>\r\n                        <SearchIcon />\r\n                    </SearchIconWrapper>\r\n                    <StyledInputBase\r\n                        placeholder=\"Searchâ€¦\"\r\n                        inputProps={{ \"aria-label\": \"search\" }}\r\n                    />\r\n                </Search>\r\n            </Toolbar>\r\n            {/* <Loader loaded={loaded} /> */}\r\n            <Box>\r\n                {data.map((list, index) => {\r\n                    return (\r\n                        <Box\r\n                            key={\"TableContent-\" + index}\r\n                            sx={{\r\n                                cursor: \"pointer\",\r\n                                width: \"fit-content\",\r\n                                \"&:hover\": {\r\n                                    fontWeight: \"bold\",\r\n                                },\r\n                            }}\r\n                        >\r\n                            {list.Title}\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default TableOfContent;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AARA;AAUA;AACA;AAFA;AATA;AAeA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AADA;AAHA;AARA;AAAA;AACA;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAFA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAHA;AAFA;AAaA;AAIA;AACA;AACA;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}