{"version":3,"file":"87.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail/TabBar.css","webpack://parkhang/./app/components/TextDetail/TabBar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"green-tint\":\"#88af8e\",\"blue-tint\":\"#024279\",\"active-button\":\"#00746b\",\"mainTint\":\"#024279\",\"activeButton\":\"#00746b\",\"tabBar\":\"TabBar---tabBar\",\"tab\":\"TabBar---tab\",\"selected\":\"TabBar---selected\"};","// @flow\r\nimport React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport styles from \"./TabBar.css\";\r\nimport Witness from \"lib/Witness\";\r\n\r\nexport type Props = {\r\n    witnesses: Witness[],\r\n    activeWitness: Witness | null,\r\n    onSelectedWitness: (witness: Witness) => void\r\n};\r\n\r\nexport default class TabBar extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let tabs = [];\r\n        if (this.props.witnesses) {\r\n            const witnesses = this.props.witnesses.map(witness => witness);\r\n            witnesses.sort((a, b) => {\r\n                if (a.isWorking) {\r\n                    return -1;\r\n                }\r\n                if (b.isWorking) {\r\n                    return 1;\r\n                }\r\n                if (a.isBase) {\r\n                    return -1;\r\n                }\r\n                if (b.isBase) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            });\r\n            for (let witness of witnesses) {\r\n                let classes = [styles.tab];\r\n                if (witness === this.props.activeWitness) {\r\n                    classes.push(styles.selected);\r\n                }\r\n                let tabName = witness.source.name;\r\n                if (witness.isWorking) {\r\n                    tabName = (\r\n                        <FormattedMessage id=\"annotation.workingEdition\" />\r\n                    );\r\n                }\r\n                tabs.push(\r\n                    <div\r\n                        className={classnames(...classes)}\r\n                        onClick={() => {\r\n                            this.props.onSelectedWitness(witness);\r\n                        }}\r\n                        key={witness.id}\r\n                    >\r\n                        {tabName}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return <div className={styles.tabBar}>{tabs}</div>;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AA7BA;AACA;AAgBA;AAAA;AAsBA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA;AACA;AAAA;AAAA;AACA;;;;AAlDA;AACA;;;;;A","sourceRoot":""}