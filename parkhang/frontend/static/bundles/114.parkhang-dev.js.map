{"version":3,"file":"114.parkhang-dev.js","sources":["webpack://parkhang/./app/components/TextDetail/AnnotationControls.test.js"],"sourcesContent":["// import React from \"react\";\r\n// import { shallow, configure } from \"enzyme\";\r\n// import Adapter from \"enzyme-adapter-react-16\";\r\n// import Text from \"lib/Text\";\r\n// import Source from \"lib/Source\";\r\n// import Witness from \"lib/Witness\";\r\n// import Annotation, {\r\n//     TemporaryAnnotation,\r\n//     ANNOTATION_TYPES\r\n// } from \"lib/Annotation\";\r\n// import { BASE_ANNOTATION_ID } from \"lib/AnnotatedText\";\r\n// import addTibetanShay from \"lib/addTibetanShay\";\r\n// import User, { getAnonymousUser } from \"lib/User\";\r\n// import AnnotationControls from \"./AnnotationControls\";\r\n// import AnnotationDetail from \"./AnnotationDetail\";\r\n// import AnnotationDetailEdit from \"./AnnotationDetailEdit\";\r\n\r\n// configure({ adapter: new Adapter() });\r\n\r\n// const source1 = new Source(1, \"Derge\");\r\n// const source2 = new Source(1, \"Pecin\");\r\n// const source3 = new Source(1, \"Narthang\");\r\n// const text = new Text(1, \"དཔལ་ནག་པོ་ཆེན་པོ་ཡུམ་ཅན་གྱི་སྒྲུབ་ཐབས་ཞེས་བྱ་བ\");\r\n// const baseWitness = new Witness(1, text, source1, \"Test witness\", true);\r\n// const otherWitness1 = new Witness(2, text, source2, null, false);\r\n// const otherWitness2 = new Witness(3, text, source3, null, false);\r\n\r\n// const anonymousUser = getAnonymousUser();\r\n// const user = new User(1, \"Test User\");\r\n\r\n// const baseAnnotation = new Annotation(\r\n//     BASE_ANNOTATION_ID,\r\n//     baseWitness,\r\n//     0,\r\n//     4,\r\n//     \"Test\",\r\n//     ANNOTATION_TYPES.variant,\r\n//     baseWitness\r\n// );\r\n// const annotation1 = new Annotation(\r\n//     1,\r\n//     baseWitness,\r\n//     0,\r\n//     4,\r\n//     \"New\",\r\n//     ANNOTATION_TYPES.variant,\r\n//     otherWitness1\r\n// );\r\n// const annotation2 = new Annotation(\r\n//     2,\r\n//     baseWitness,\r\n//     0,\r\n//     4,\r\n//     \"New\",\r\n//     ANNOTATION_TYPES.variant,\r\n//     otherWitness2\r\n// );\r\n// const temporaryAnnotation = new TemporaryAnnotation(\r\n//     baseAnnotation,\r\n//     baseWitness,\r\n//     0,\r\n//     4,\r\n//     \"Newer\",\r\n//     ANNOTATION_TYPES.variant,\r\n//     null,\r\n//     user\r\n// );\r\n\r\n// const extraName = [\r\n//     addTibetanShay(annotation1.getSourceName()),\r\n//     addTibetanShay(annotation2.getSourceName())\r\n// ].join(\" \");\r\n// const baseAnnotationData = {\r\n//     id: baseAnnotation.id,\r\n//     name: addTibetanShay(baseAnnotation.getSourceName()),\r\n//     content: baseAnnotation.content,\r\n//     annotation: baseAnnotation\r\n// };\r\n// const annotation1Data = {\r\n//     id: annotation1.id,\r\n//     name: extraName,\r\n//     content: annotation1.content,\r\n//     annotation: annotation1\r\n// };\r\n// const temporaryData = {\r\n//     id: temporaryAnnotation.id,\r\n//     name: temporaryAnnotation.getSourceName(),\r\n//     content: temporaryAnnotation.content,\r\n//     isTemporary: true,\r\n//     annotation: temporaryAnnotation\r\n// };\r\n\r\n// describe(\"AnnotationControls\", () => {\r\n//     test(\"Show available variants\", () => {\r\n//         const activeAnnotation = baseAnnotation;\r\n//         const availableAnnotations = [baseAnnotation, annotation1, annotation2];\r\n//         const annotationsData = [baseAnnotationData, annotation1Data];\r\n\r\n//         const controls = shallow(\r\n//             <AnnotationControls\r\n//                 annotationsData={annotationsData}\r\n//                 activeAnnotation={activeAnnotation}\r\n//                 baseAnnotation={baseAnnotation}\r\n//                 availableAnnotations={availableAnnotations}\r\n//                 user={user}\r\n//                 temporaryAnnotation={null}\r\n//                 selectedWitness={baseWitness}\r\n//             />\r\n//         );\r\n\r\n//         const children = controls.children();\r\n//         expect(children.find(AnnotationDetail).length).toEqual(2);\r\n\r\n//         expect(children.find(AnnotationDetailEdit).length).toEqual(0);\r\n//     });\r\n// });\r\n\r\n// test(\"Editing annotation\", () => {\r\n//     const activeAnnotation = temporaryAnnotation;\r\n//     const availableAnnotations = [\r\n//         temporaryAnnotation.basedOn,\r\n//         annotation1,\r\n//         annotation2\r\n//     ];\r\n//     const annotationsData = [\r\n//         temporaryData,\r\n//         baseAnnotationData,\r\n//         annotation1Data\r\n//     ];\r\n\r\n//     const controls = shallow(\r\n//         <AnnotationControls\r\n//             annotationsData={annotationsData}\r\n//             activeAnnotation={activeAnnotation}\r\n//             baseAnnotation={baseAnnotation}\r\n//             availableAnnotations={availableAnnotations}\r\n//             user={user}\r\n//             temporaryAnnotation={temporaryAnnotation}\r\n//             selectedWitness={baseWitness}\r\n//         />\r\n//     );\r\n\r\n//     const firstDetail = controls.childAt(1);\r\n//     expect(firstDetail.find(AnnotationDetailEdit).length).toEqual(1);\r\n\r\n//     const children = controls.children();\r\n//     expect(children.find(AnnotationDetail).length).toEqual(2);\r\n\r\n//     expect(children.find(AnnotationDetailEdit).length).toEqual(1);\r\n// });\r\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;;A","sourceRoot":""}